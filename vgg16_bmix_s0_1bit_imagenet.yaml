# Experiment name
name: VGG16_ImageNet_bmix

# Dataset loader
dataloader:
  # Dataset to train/validate (choices: imagenet, cifar10)
  dataset: imagenet
  # Number of categories in the specified dataset (choices: 1000, 10)
  num_classes: 1000
  # Path to dataset directory
  path: /home/liqiufeng/datasets/imagenet_new/ILSVRC/Data/CLS-LOC/
  # path: /home/liqiufeng/mix_lcd/quant_mix_lr/data_new/
  # Size of mini-batch
  batch_size: 32
  # Portion of training dataset to set aside for validation (range: [0, 1))
  val_split: 0.

resume:
  # Path to a checkpoint to be loaded. Leave blank to skip
  path:
  # Resume model parameters only
  lean: false

# Device to be used
device:
  # Use CPU or GPU (choices: cpu, cuda)
  type: cuda
  # GPU device IDs to be used. Only valid when device.type is 'cuda'
  gpu: [0]
#============================ Model ============================================

# Supported model architecture
# choices:
#   ImageNet:
#     resnet18, resnet34, resnet50, resnet101, resnet152
#   CIFAR10:
#     resnet20, resnet32, resnet44, resnet56, resnet110, resnet1202
arch: vgg16_s0_1bit

# Use pre-trained model
pre_trained: true

#============================ Quantization =====================================

quan:
  act: # (default for all layers)
    # Quantizer type (choices: lsq)
    mode: lsq
    # Bit width of quantized activation
    bit: 8
    # Each output channel uses its own scaling factor
    per_channel: false
    # Whether to use symmetric quantization
    symmetric: false
    # Quantize all the numbers to non-negative
    all_positive: false
  weight: # (default for all layers)
    # Quantizer type (choices: lsq)
    mode: lsq
    # Bit width of quantized weight
    bit: 8
    # Each output channel uses its own scaling factor
    per_channel: false
    # Whether to use symmetric quantization
    symmetric: true
    # Whether to quantize all the numbers to non-negative
    all_positive: false
  excepts:
    # Specify quantized bit width for some layers, like this:
    conv1:
      act:
        bit:
        all_positive: false
      weight:
        bit:
    fc:
      act:
        bit:
      weight:
        bit:

#============================ Training / Evaluation ============================

# Evaluate the model without training
# If this field is true, all the bellowing options will be ignored
eval: false

epochs: 160

optimizer:
  learning_rate: 0.0005
  momentum: 0.9
  weight_decay: 0.0001

# Learning rate scheduler
lr_scheduler:
  # Update learning rate per batch or epoch
  update_per_batch: true

  # Uncomment one of bellowing options to activate a learning rate scheduling

  # Fixed learning rate
  # mode: fixed

  # Step decay
  # mode: step
  # step_size: 30
  # gamma: 0.1

  # Multi-step decay
  # mode: multi_step
  # milestones: [3, 9, 21, 45, 90] #0.003 [3 0.0015 9] [9 0.00075 21] [21 0.000375 45] [45 0.0001875 90] [90 0.00009375]
  # gamma: 0.5                     

  # mode: multi_step
  # milestones: [3, 9 , 18, 30, 45, 63, 84, 108] #0.0005 [3 0.00025 9] [9 0.000125 18] [18 0.0000625 30] [30 0.0003125 45] [45 0.00015625 63] [63 0.000078125 84] [84 0.000078125 108] 
  # gamma: 0.5                     

  mode: multi_step
  milestones: [80, 120, 130, 140, 150] #0.0005 [3 0.00025 9] [9 0.000125 18] [18 0.0000625 30] [30 0.0003125 45] [45 0.00015625 63] [63 0.000078125 84] [84 0.000078125 108] 
  gamma: 0.5   

  # Exponential decay
  # mode: exp
  # gamma: 0.95

  # Cosine annealing
  # mode: cos
  # lr_min: 0
  # cycle: 0.95

  # Cosine annealing with warm restarts
  # mode: cos_warm_restarts
  # lr_min: 0
  # cycle: 5
  # cycle_scale: 2
  # amp_scale: 0.5
